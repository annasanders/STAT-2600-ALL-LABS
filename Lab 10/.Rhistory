answers <- read.table(unz("lab10.zip", "Answers_trunc.csv"),
sep= ",", header= T, na.strings = c("NA","","?"), stringsAsFactors = FALSE)
View(answers)
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`Creationdate`= col_datetime(format="%Y/%m/%d %H:%M:%SZ")))
library(tidyverse)
library(lubridate)
library(tidyverse)
library(lubridate)
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`Creationdate`= col_datetime(format="%Y/%m/%d %H:%M:%SZ")))
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`CreationDate`= col_datetime(format="%Y/%m/%d %H:%M:%SZ")))
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`CreationDate`= col_datetime(format="%Y/%m/%d %H:%M:%S")))
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`CreationDate`= col_datetime(format="%Y-%m-%dT %H:%M:%S")))
answers <- read_csv("Answers_trunc.csv", col_names = TRUE)
answers <- read_csv("Answers_trunc.csv", col_names = TRUE)%>%
select (Id, OwnerUserId, CreationDate, ParentId, Score, Body)
questions <- read_csv("Questions_trunc.csv", col_name= TRUE)%>%
select(Id, OwnerUserId, CreationDate, Title, Body, Score)
View(answers)
View(questions)
questions <- read_csv("Questions_trunc.csv", col_name= TRUE)%>%
select(Id, OwnerUserId, CreationDate, Score, Title, Body)
answersj <- answers%>%
rename(ParentId= Id, Id= AnswerId)
answersj <- answers%>%
rename(AnswerId= Id, Id= ParentId)
View(answersj)
QnA <- full_join(questions, answersj, by= Id)
QnA <- join(questions, answersj, by= Id, type="full")
View(answersj)
QnA <- full_join(questions, answersj, by= "Id")
View(QnA)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
AId= OwnUserId.y,
QId= OwnerUserId.x
)%>%
select(Title, QId, QTitle, QDate, QScore, QBody,
AId, ADate, AScore, ABody)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
AId= OwnerUserId.y,
QId= OwnerUserId.x
)%>%
select(Title, QId, QTitle, QDate, QScore, QBody,
AId, ADate, AScore, ABody)
QnA <- select(Title, QId, QTitle, QDate, QScore, QBody,
AId, ADate, AScore, ABody)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
AId= OwnerUserId.y,
QId= OwnerUserId.x
)
QnA <- select(Title, QId, QTitle, QDate, QScore, QBody,
AId, ADate, AScore, ABody)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
aId= OwnerUserId.y,
qId= OwnerUserId.x
)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
Aid= OwnerUserId.y,
Qid= OwnerUserId.x
)
QnA <- full_join(questions, answersj, by= "Id")
View(QnA)
QnA <- select(Title, QId, QTitle, QDate, QScore, QUserId, QBody,
AId, ADate, AScore, AUserId, ABody)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
AUserId= OwnerUserId.y,
QUserId= OwnerUserId.x,
Aid= AnswerId,
Qid= Id
)
QnA <- select(Title, QId, QTitle, QDate, QScore, QUserId, QBody,
AId, ADate, AScore, AUserId, ABody)
QnA <- select(QId, QTitle, QDate, QScore, QUserId, QBody,
AId, ADate, AScore, AUserId, ABody)
QnA <- select(Qid, QTitle, QDate, QScore, QUserId, QBody,
Aid, ADate, AScore, AUserId, ABody)
QnA1 <- QnA%>%
select(Qid, QTitle, QDate, QScore, QUserId, QBody,
Aid, ADate, AScore, AUserId, ABody)
View(QnA)
knitr::opts_chunk$set(echo = TRUE)
time <- QnA%>%
select(Qid, QDate, QScore, ADate, AScore)
View(time)
time <- QnA%>%
select(Qid, QDate, ADate, AScore)
etime <- time%?>%
mutate(Epoints= AScore/(ADate-QDate))
etime <- time%>%
mutate(Epoints= AScore/(ADate-QDate))
etime <- time%>%
mutate(Etime= ADate-QDate)
View(etime)
View(etime)
etime <- time%>%
mutate(Etime= (ADate-QDate)/60)
etime <- time%>%
mutate(Etime= (ADate-QDate)/120)
ggplot(etime)+
geom_point(mapping= aes(x=AScore, y=Etime))
ggplot(etime)+
geom_point(mapping= aes(x=Etime, y=AScore))
etime <- time%>%
mutate(Etime= ADate-QDate)
etime <- time%>%
mutate(Etime= ADate-QDate)%>%
select(Etime >0)
etime <- time%>%
mutate(Etime= ADate-QDate)%>%
etime1 <- select(Etime >0)
etime <- time%>%
mutate(Etime= ADate-QDate)%>%
etime1 <- etime%>%
select(Etime >0)
etime <- time%>%
mutate(Etime= ADate-QDate)
etime1 <- etime%>%
select(Etime >0)
etime1 <- etime%>%
filter(Etime >0)
etime1 <- etime%>%
filter(Etime >= 0)
etime <- time%>%
mutate(Etime= ADate-QDate, as.factor= F)
etime <- time%>%
mutate(Etime= ADate-QDate)
etime1 <- etime%>%
filter(Etime >= 0)
View(etime1)
ggplot(etime)+
geom_point(mapping= aes(x=Etime, y=AScore))
ggplot(etime1)+
geom_point(mapping= aes(x=Etime, y=AScore))
