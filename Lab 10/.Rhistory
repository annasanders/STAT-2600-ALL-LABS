answers <- read.table(unz("lab10.zip", "Answers_trunc.csv"),
sep= ",", header= T, na.strings = c("NA","","?"), stringsAsFactors = FALSE)
View(answers)
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`Creationdate`= col_datetime(format="%Y/%m/%d %H:%M:%SZ")))
library(tidyverse)
library(lubridate)
library(tidyverse)
library(lubridate)
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`Creationdate`= col_datetime(format="%Y/%m/%d %H:%M:%SZ")))
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`CreationDate`= col_datetime(format="%Y/%m/%d %H:%M:%SZ")))
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`CreationDate`= col_datetime(format="%Y/%m/%d %H:%M:%S")))
answers <- read_csv("Answers_trunc.csv", col_names = TRUE, col_types= cols(`CreationDate`= col_datetime(format="%Y-%m-%dT %H:%M:%S")))
answers <- read_csv("Answers_trunc.csv", col_names = TRUE)
answers <- read_csv("Answers_trunc.csv", col_names = TRUE)%>%
select (Id, OwnerUserId, CreationDate, ParentId, Score, Body)
questions <- read_csv("Questions_trunc.csv", col_name= TRUE)%>%
select(Id, OwnerUserId, CreationDate, Title, Body, Score)
View(answers)
View(questions)
questions <- read_csv("Questions_trunc.csv", col_name= TRUE)%>%
select(Id, OwnerUserId, CreationDate, Score, Title, Body)
answersj <- answers%>%
rename(ParentId= Id, Id= AnswerId)
answersj <- answers%>%
rename(AnswerId= Id, Id= ParentId)
View(answersj)
QnA <- full_join(questions, answersj, by= Id)
QnA <- join(questions, answersj, by= Id, type="full")
View(answersj)
QnA <- full_join(questions, answersj, by= "Id")
View(QnA)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
AId= OwnUserId.y,
QId= OwnerUserId.x
)%>%
select(Title, QId, QTitle, QDate, QScore, QBody,
AId, ADate, AScore, ABody)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
AId= OwnerUserId.y,
QId= OwnerUserId.x
)%>%
select(Title, QId, QTitle, QDate, QScore, QBody,
AId, ADate, AScore, ABody)
QnA <- select(Title, QId, QTitle, QDate, QScore, QBody,
AId, ADate, AScore, ABody)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
AId= OwnerUserId.y,
QId= OwnerUserId.x
)
QnA <- select(Title, QId, QTitle, QDate, QScore, QBody,
AId, ADate, AScore, ABody)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
aId= OwnerUserId.y,
qId= OwnerUserId.x
)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
Aid= OwnerUserId.y,
Qid= OwnerUserId.x
)
QnA <- full_join(questions, answersj, by= "Id")
View(QnA)
QnA <- select(Title, QId, QTitle, QDate, QScore, QUserId, QBody,
AId, ADate, AScore, AUserId, ABody)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
AUserId= OwnerUserId.y,
QUserId= OwnerUserId.x,
Aid= AnswerId,
Qid= Id
)
QnA <- select(Title, QId, QTitle, QDate, QScore, QUserId, QBody,
AId, ADate, AScore, AUserId, ABody)
QnA <- select(QId, QTitle, QDate, QScore, QUserId, QBody,
AId, ADate, AScore, AUserId, ABody)
QnA <- select(Qid, QTitle, QDate, QScore, QUserId, QBody,
Aid, ADate, AScore, AUserId, ABody)
QnA1 <- QnA%>%
select(Qid, QTitle, QDate, QScore, QUserId, QBody,
Aid, ADate, AScore, AUserId, ABody)
View(QnA)
knitr::opts_chunk$set(echo = TRUE)
time <- QnA%>%
select(Qid, QDate, QScore, ADate, AScore)
View(time)
time <- QnA%>%
select(Qid, QDate, ADate, AScore)
etime <- time%?>%
mutate(Epoints= AScore/(ADate-QDate))
etime <- time%>%
mutate(Epoints= AScore/(ADate-QDate))
etime <- time%>%
mutate(Etime= ADate-QDate)
View(etime)
View(etime)
etime <- time%>%
mutate(Etime= (ADate-QDate)/60)
etime <- time%>%
mutate(Etime= (ADate-QDate)/120)
ggplot(etime)+
geom_point(mapping= aes(x=AScore, y=Etime))
ggplot(etime)+
geom_point(mapping= aes(x=Etime, y=AScore))
etime <- time%>%
mutate(Etime= ADate-QDate)
etime <- time%>%
mutate(Etime= ADate-QDate)%>%
select(Etime >0)
etime <- time%>%
mutate(Etime= ADate-QDate)%>%
etime1 <- select(Etime >0)
etime <- time%>%
mutate(Etime= ADate-QDate)%>%
etime1 <- etime%>%
select(Etime >0)
etime <- time%>%
mutate(Etime= ADate-QDate)
etime1 <- etime%>%
select(Etime >0)
etime1 <- etime%>%
filter(Etime >0)
etime1 <- etime%>%
filter(Etime >= 0)
etime <- time%>%
mutate(Etime= ADate-QDate, as.factor= F)
etime <- time%>%
mutate(Etime= ADate-QDate)
etime1 <- etime%>%
filter(Etime >= 0)
View(etime1)
ggplot(etime)+
geom_point(mapping= aes(x=Etime, y=AScore))
ggplot(etime1)+
geom_point(mapping= aes(x=Etime, y=AScore))
knitr::opts_chunk$set(echo = TRUE)
# Load Both Parts of this Data
library(tidyverse)
library(lubridate)
View(answers)
answers <- read_csv("Answers_trunc.csv", col_names = TRUE)%>%
select (Id, OwnerUserId, CreationDate, ParentId, Score, Body)
questions <- read_csv("Questions_trunc.csv", col_name= TRUE)%>%
select(Id, OwnerUserId, CreationDate, Score, Title, Body)
## Join if you want (run all code)
answersj <- answers%>%
rename(AnswerId= Id, Id= ParentId)
QnA <- full_join(questions, answersj, by= "Id")%>%
rename(QDate= CreationDate.x,
QScore= Score.x,
QTitle= Title,
QBody= Body.x,
ADate= CreationDate.y,
AScore= Score.y,
ABody= Body.y,
AUserId= OwnerUserId.y,
QUserId= OwnerUserId.x,
Aid= AnswerId,
Qid= Id
)
QnA <- QnA%>%
select(Qid, QTitle, QDate, QScore, QUserId, QBody,
Aid, ADate, AScore, AUserId, ABody)
updoot <- QnA%>%
mutate(Diff= AScore-QScore)
updoot1 <- updoot%>%
filter(Diff > 0)
ggplot (updoot1)+
geom_point(mapping=aes(x=Diff, y=QScore, color=AScore))
ggplot (updoot1)+
geom_point(mapping=aes(x=Diff, y=QScore, color=AScore))+
labs(x= "Difference in Answer Score and Question Score", y= "Question Score", title= "What Questions Have Answers Rated Higher than the Question?")+
scale_x_continuous(limits= c(0,2000))+
scale_y_continous(limits= c(0,2000))+
scale_fill_manual(name= "Answer Score")+
scale_fill_gradient(colors=topo.colors(7))
ggplot (updoot1)+
geom_point(mapping=aes(x=Diff, y=QScore, color=AScore))+
labs(x= "Difference in Answer Score and Question Score", y= "Question Score", title= "What Questions Have Answers Rated Higher than the Question?")+
scale_x_continuous(limits= c(0,2000))+
scale_y_continuous(limits= c(0,2000))+
scale_fill_manual(name= "Answer Score")+
scale_fill_gradient(colors=topo.colors(7))
ggplot (updoot1)+
geom_point(mapping=aes(x=Diff, y=QScore, color=AScore))+
labs(x= "Difference in Answer Score and Question Score", y= "Question Score", title= "What Questions Have Answers Rated Higher than the Question?")+
scale_x_continuous(limits= c(0,2000))+
scale_y_continuous(limits= c(0,2000))+
scale_fill_manual(name= "Answer Score")+
scale_fill_gradientn(colors=topo.colors(7))
ggplot (updoot1)+
geom_point(mapping=aes(x=Diff, y=QScore, color=AScore))+
labs(x= "Difference in Answer Score and Question Score", y= "Question Score", title= "What Questions Have Answers Rated Higher than the Question?")+
scale_x_continuous(limits= c(0,2000))+
scale_y_continuous(limits= c(0,2000))+
scale_fill_manual(name= "Answer Score")+
scale_color_gradient2(midpoint=mid, low="red", high="blue")
ggplot (updoot1)+
geom_point(mapping=aes(x=Diff, y=QScore, color=AScore))+
labs(x= "Difference in Answer Score and Question Score", y= "Question Score", title= "What Questions Have Answers Rated Higher than the Question?")+
scale_x_continuous(limits= c(0,2000))+
scale_y_continuous(limits= c(0,2000))+
scale_fill_manual(name= "Answer Score")+
scale_color_gradient2(low="red", high="blue")
ggplot (updoot1)+
geom_point(mapping=aes(x=Diff, y=QScore, color=AScore))+
labs(x= "Difference in Answer Score and Question Score", y= "Question Score", title= "What Questions Have Answers Rated Higher than the Question?")+
scale_x_continuous(limits= c(0,2000))+
scale_y_continuous(limits= c(0,2000))+
scale_fill_manual(name= "Answer Score")+
scale_color_gradient(low="blue", high="red")
str_detect(babynames$name. "Anna")
babynames
library(babynames)
install.packages("babynames")
install.packages("babynames")
library(babynames)
install.packages("babynames")
install.package("babynames")
install.packages("babynames")
library(babynames)
install.packages("babynames")
library(babynames)
myname <- babynames%>%
filter(babynames, str_detect(babynames$name. "Anna"))
myname <- babynames%>%
filter(babynames, str_detect(babynames$name. "Anna"))
myname <- babynames%>%
filter(babynames, str_detect(babynames$name, "Anna"))
view(babynames)
babynames<- view(babynames)
View(answersj)
View(babynames)
myname <- babynames%>%
filter(str_detect(babynames$name, "Anna"))
View(myname)
myname <- babynames%>%
filter(str_detect(babynames$name, "James"))
View(myname)
myname <- babynames%>%
filter(str_detect(babynames$name, "Elsa"))
filter(babynames, str_detect("Ar[iy]+.l[^a]?$"))
filter(babynames, str_detect(name, "Ar[iy]+.l[^a]?$"))
filter(babynames, str_detect(name, "Ariel*")
filter(babynames, str_detect(name, "Ariel*"))
filter(babynames, str_detect(name, "Ariel*"))
filter(babynames, str_detect(name, "Ar[iy]+.l")
filter(babynames, str_detect(name, "Ar[iy]+.l"))
filter(babynames, str_detect(name, "Ar[iy]+.l"))
myname <- babynames%>%
filter(str_detect(babynames$name, "Anna"))
myname <- babynames%>%
filter(str_detect(babynames$name, ".Anna"))
filter(babynames, str_detect(name, "Ar[iy]+.l[^a]?$"),  year=="1973")
filter(babynames, str_detect(name, "Ar[iy]+.l[^a]?$"),  year=="1973")
filter(babynames, str_detect(name, "Ariel*"), year==1973)
filter(babynames, str_detect(name, "Ariel*"), year==1988)
filter(babynames, str_detect(name, "Ariel*"), year==1990)
filter(babynames, str_detect(name, "Ra[ey]?ch"), year==1990)%>%
summarise(sum(n))
filter(babynames, str_detect(name, "Ra[ey]?ch"), year==1973)%>%
summarise(sum(n))
filter(babynames, str_detect(name, "Ra[ey]?ch"), year==1988)%>%
summarise(sum(n))
filter(babynames, sex=="F", year==1988)%>%
summarise(sum(n))
filter(babynames, sex=="F", year==1990)%>%
summarise(sum(n))
ariel<-babynames%>%
filter(str_detect(name, "Ar[iy]+.l"))%>%
group_by(year)%>%
summarize(sum(n))
View(ariel)
ggplot(ariel, mapping=aes(x=year, y=sum(n)))
ariel<-babynames%>%
filter(str_detect(name, "Ar[iy]+.l"))%>%
group_by(year)%>%
summarize(n)
ariel<-babynames%>%
filter(str_detect(name, "Ar[iy]+.l"))%>%
group_by(year)%>%
summarize(sum(n))
geom_line()
geom_line()
geom_point()
geom_point(mapping=aes(x=year, y=`sum(n)`)
ggplot(ariel)+
geom_point(mapping=aes(x=year, y=`sum(n)`))
ggplot(ariel)+
geom_point(mapping=aes(x=year, y=`sum(n)`))
ggplot(ariel)+
geom_line(mapping=aes(x=year, y=`sum(n)`))
ggplot(ariel)+
geom_line(mapping=aes(x=year, y=`sum(n)`))+
abline(v=1989)
ggplot(ariel)+
geom_line(mapping=aes(x=year, y=`sum(n)`))+
abline(v=1989, col="Blue")
ggplot(ariel)+
geom_line(mapping=aes(x=year, y=`sum(n)`))+
abline(v="1989", col="blue")
ggplot(ariel)+
geom_line(mapping=aes(x=year, y=`sum(n)`))+
abline(a = NULL, b = NULL, h = NULL, v="1989", col="blue")
ggplot(ariel)+
geom_line(mapping=aes(x=year, y=`sum(n)`))+
abline(v=1989, col="blue")
ggplot(ariel)+
geom_line(mapping=aes(x=year, y=`sum(n)`))+
plot.new+
abline(v=1989, col="blue")
ggplot(ariel)+
geom_line(mapping=aes(x=year, y=`sum(n)`))+
geom_vline(xintercept= 1989)
ggplot(ariel)+
geom_line(mapping=aes(x=year, y=`sum(n)`))+
geom_vline(xintercept= 1989, col="blue")
anames <-babynames%>%
filter(str_detect(name, "^A"))
anames <-babynames%>%
filter(str_detect(name, "^A"))%>%
group_by(year)%>%
summarize(sum(n))
ggplot()+
geom_line(ariel, mapping=aes(x=year, y=`sum(n)`))+
geom_vline(xintercept= 1989, col="blue")+
geom_line(amanes, mapping=aes(x=year, y=`sum(n)`))
ggplot()+
geom_line(ariel, mapping=aes(x=year, y=`sum(n)`))+
geom_vline(xintercept= 1989, col="blue")+
geom_line(anames, mapping=aes(x=year, y=`sum(n)`))
